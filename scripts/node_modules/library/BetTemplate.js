//------------------------------------------------------------------------------
//
//     This code was auto generated.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
//
//------------------------------------------------------------------------------

const extend = require('js-base/core/extend');
const FlexLayout = require('sf-core/ui/flexlayout');
const Color = require('sf-core/ui/color');
const Label = require('sf-core/ui/label');
const TextAlignment = require('sf-core/ui/textalignment');
const Font = require('sf-core/ui/font');

const getCombinedStyle = require("library/styler-builder").getCombinedStyle;

const BetTemplate = extend(FlexLayout)(
  //constructor
  function(_super, props) {
    // initalizes super class for this component scope
    _super(this, props);

    const labelTypeStyle = getCombinedStyle(".label", {
      height: NaN,
      width: 30,
      text: "1",
      left: NaN,
      backgroundColor: Color.create(0, 255, 0, 0),
      textAlignment: TextAlignment.MIDCENTER,
      id: 103,
      font: Font.create(Font.DEFAULT, 15, Font.BOLD)

    });
    var labelType = new Label(labelTypeStyle);
    if (labelTypeStyle.scrollEnabled === false)
      labelType.ios && (labelType.ios.scrollEnabled = false);
    this.addChild(labelType);
    this.labelType = labelType;

    const layout_divider1Style = getCombinedStyle(".flexLayout", {
      width: 1,
      height: NaN,
      backgroundColor: Color.create(255, 220, 220, 220),
      id: 102
    });
    var layout_divider1 = new FlexLayout(layout_divider1Style);
    this.addChild(layout_divider1);

    const labelPercentStyle = getCombinedStyle(".label", {
      height: NaN,
      width: NaN,
      text: "1.55",
      left: NaN,
      backgroundColor: Color.create(0, 255, 255, 255),
      textAlignment: TextAlignment.MIDCENTER,
      marginLeft: 2,
      textColor: Color.create(255, 252, 103, 38),
      id: 101,
      flexGrow: 1,
      font: Font.create(Font.DEFAULT, 15, Font.BOLD)

    });
    var labelPercent = new Label(labelPercentStyle);
    if (labelPercentStyle.scrollEnabled === false)
      labelPercent.ios && (labelPercent.ios.scrollEnabled = false);
    this.addChild(labelPercent);
    this.labelPercent = labelPercent;

    //assign the children to betTemplate 
    this.children = Object.assign({}, {
      labelType: labelType,
      layout_divider1: layout_divider1,
      labelPercent: labelPercent
    });

  });

BetTemplate.defaults = getCombinedStyle(".flexLayout", {
  width: 126.53846007127028,
  height: 38.46153846153846,
  borderRadius: 8,
  backgroundColor: Color.create(255, 255, 255, 255),
  paddingLeft: 1,
  paddingRight: 1,
  paddingBottom: 1,
  paddingTop: 1,
  flexDirection: FlexLayout.FlexDirection.ROW
});

module && (module.exports = BetTemplate);